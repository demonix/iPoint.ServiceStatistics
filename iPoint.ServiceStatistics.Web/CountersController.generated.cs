// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace iPoint.ServiceStatistics.Web.Controllers {
    public partial class CountersController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CountersController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected CountersController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Data() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Data);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult CounterCategories() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.CounterCategories);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult CounterNames() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.CounterNames);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult CounterDetails() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.CounterDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult CounterData() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.CounterData);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SingleGraph() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SingleGraph);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public CountersController Actions { get { return MVC.Counters; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Counters";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Counters";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Data = "Data";
            public readonly string CounterCategories = "CounterCategories";
            public readonly string CounterNames = "CounterNames";
            public readonly string CounterDetails = "CounterDetails";
            public readonly string Index = "Index";
            public readonly string CountersGraph = "CountersGraph";
            public readonly string CounterData = "CounterData";
            public readonly string SingleGraph = "SingleGraph";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string Data = "Data";
            public const string CounterCategories = "CounterCategories";
            public const string CounterNames = "CounterNames";
            public const string CounterDetails = "CounterDetails";
            public const string Index = "Index";
            public const string CountersGraph = "CountersGraph";
            public const string CounterData = "CounterData";
            public const string SingleGraph = "SingleGraph";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _CounterQueryParametersControl = "~/Views/Counters/_CounterQueryParametersControl.cshtml";
            public readonly string CountersGraph = "~/Views/Counters/CountersGraph.cshtml";
            public readonly string Data = "~/Views/Counters/Data.cshtml";
            public readonly string Index = "~/Views/Counters/Index.cshtml";
            public readonly string SingleGraph = "~/Views/Counters/SingleGraph.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_CountersController: iPoint.ServiceStatistics.Web.Controllers.CountersController {
        public T4MVC_CountersController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.JsonResult Data(string sd, string ed, string cc, string cn, string cs, string ci, string ced) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Data);
            callInfo.RouteValueDictionary.Add("sd", sd);
            callInfo.RouteValueDictionary.Add("ed", ed);
            callInfo.RouteValueDictionary.Add("cc", cc);
            callInfo.RouteValueDictionary.Add("cn", cn);
            callInfo.RouteValueDictionary.Add("cs", cs);
            callInfo.RouteValueDictionary.Add("ci", ci);
            callInfo.RouteValueDictionary.Add("ced", ced);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult CounterCategories(string sd, string ed) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.CounterCategories);
            callInfo.RouteValueDictionary.Add("sd", sd);
            callInfo.RouteValueDictionary.Add("ed", ed);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult CounterNames(string sd, string ed, int cc) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.CounterNames);
            callInfo.RouteValueDictionary.Add("sd", sd);
            callInfo.RouteValueDictionary.Add("ed", ed);
            callInfo.RouteValueDictionary.Add("cc", cc);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult CounterDetails(string sd, string ed, int cc, int cn) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.CounterDetails);
            callInfo.RouteValueDictionary.Add("sd", sd);
            callInfo.RouteValueDictionary.Add("ed", ed);
            callInfo.RouteValueDictionary.Add("cc", cc);
            callInfo.RouteValueDictionary.Add("cn", cn);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult CountersGraph() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.CountersGraph);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult CounterData(string sd, string ed, int cc, int cn, int cs, int ci, int ced, string series) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.CounterData);
            callInfo.RouteValueDictionary.Add("sd", sd);
            callInfo.RouteValueDictionary.Add("ed", ed);
            callInfo.RouteValueDictionary.Add("cc", cc);
            callInfo.RouteValueDictionary.Add("cn", cn);
            callInfo.RouteValueDictionary.Add("cs", cs);
            callInfo.RouteValueDictionary.Add("ci", ci);
            callInfo.RouteValueDictionary.Add("ced", ced);
            callInfo.RouteValueDictionary.Add("series", series);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SingleGraph(string param, int width, int height) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SingleGraph);
            callInfo.RouteValueDictionary.Add("param", param);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
